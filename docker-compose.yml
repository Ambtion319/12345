# ===========================================
# UWorld Replica - Docker Compose Configuration
# ===========================================

version: '3.8'

services:
  # ===========================================
  # Main Application
  # ===========================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/uworld_replica
      - MONGODB_URI=mongodb://mongodb:27017/uworld_replica
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - uworld-network

  # ===========================================
  # PostgreSQL Database
  # ===========================================
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=uworld_replica
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - uworld-network

  # ===========================================
  # MongoDB Database
  # ===========================================
  mongodb:
    image: mongo:7.0
    environment:
      - MONGO_INITDB_DATABASE=uworld_replica
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - uworld-network

  # ===========================================
  # Redis Cache
  # ===========================================
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - uworld-network

  # ===========================================
  # Nginx Reverse Proxy
  # ===========================================
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - uworld-network

  # ===========================================
  # Development Environment
  # ===========================================
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/uworld_replica_dev
      - MONGODB_URI=mongodb://mongodb:27017/uworld_replica_dev
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - uworld-network

# ===========================================
# Volumes
# ===========================================
volumes:
  postgres_data:
  mongodb_data:
  redis_data:

# ===========================================
# Networks
# ===========================================
networks:
  uworld-network:
    driver: bridge
